# This file is a template, and might need editing before it works on your project.

#deb

# build-php-7.4:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG -t "$CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG" -f debian/Dockerfile.php${CI_PHP7_4_BASE_TAG} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG"
#   only:
#     - main

# build-php-7.4-kafka:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG -t "$CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG" -f debian/Dockerfile.php${CI_PHP7_4_KAFKA_TAG} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG"
#   only:
#     - main

# build-php-8.1:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG -t "$CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG" -f debian/Dockerfile.php${CI_PHP8_1_BASE_TAG} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG"
#   only:
#     - main

# build-php-8.1-kafka:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG -t "$CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG" -f debian/Dockerfile.php${CI_PHP8_1_KAFKA_TAG} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG"
#   only:
#     - main

# #alpine

# build-php-7.4-alpine:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG_ALPINE" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG_ALPINE -t "$CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG_ALPINE" -f alpine/Dockerfile.php${CI_PHP7_4_BASE_TAG_ALPINE} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP7_4_BASE_TAG_ALPINE"
#   only:
#     - main

# build-php-7.4-kafka-alpine:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG_ALPINE" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG_ALPINE -t "$CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG_ALPINE" -f alpine/Dockerfile.php${CI_PHP7_4_KAFKA_TAG_ALPINE} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP7_4_KAFKA_TAG_ALPINE"
#   only:
#     - main

# build-php-8.1-alpine:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG_ALPINE" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG_ALPINE -t "$CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG_ALPINE" -f alpine/Dockerfile.php${CI_PHP8_1_BASE_TAG_ALPINE} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP8_1_BASE_TAG_ALPINE"
#   only:
#     - main

# build-php-8.1-kafka-alpine:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG_ALPINE" || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG_ALPINE -t "$CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG_ALPINE" -f alpine/Dockerfile.php${CI_PHP8_1_KAFKA_TAG_ALPINE} .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_PHP8_1_KAFKA_TAG_ALPINE"
#   only:
#     - main

# docker-build-php-yodawy:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull "saifxhatem/yodawy:php" || true
#     - docker build --cache-from "saifxhatem/yodawy:php" -t "saifxhatem/yodawy:php" -f Dockerfile.php7.4.yodawy .
#     - docker push "saifxhatem/yodawy:php"
#   only:
#     - main

build-php-7.4:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "${CI_REGISTRY_IMAGE}:${CI_PHP_7_4}" || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:${CI_PHP_7_4} -t "${CI_REGISTRY_IMAGE}:${CI_PHP_7_4}" -f Dockerfile.debian --build-arg PHP_VERSION=${CI_PHP_7_4} .
    - docker push "${CI_REGISTRY_IMAGE}:$CI_PHP_7_4"
  only:
    - main