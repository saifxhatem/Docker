# build-php-7.4:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#     - mkdir -p .docker
#     - "docker load -q -i .docker/fs.tar 2>&1 || :"
#     - rm -rf .docker
#   script:
#     - docker pull "${CI_REGISTRY_IMAGE}:${CI_PHP_7_4}" || true
#     - docker build --cache-from ${CI_REGISTRY_IMAGE}:${CI_PHP_7_4} -t "${CI_REGISTRY_IMAGE}:${CI_PHP_7_4}" -f Dockerfile --build-arg PHP_VERSION=${CI_PHP_7_4} .
#     - docker push "${CI_REGISTRY_IMAGE}:$CI_PHP_7_4"
#   after_script:
#     - mkdir -p .docker
#     - "docker save -o .docker/fs.tar ${CI_REGISTRY_IMAGE}:${CI_PHP_7_4} 2>&1 || :"
#     #why is this needed?
#     # - docker system prune -a
#   cache:
#     - key: $CI_COMMIT_REF_SLUG
#       paths:
#         - .docker
#   only:
#     - main

build-php:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  parallel:
    matrix:
      - PHP_VERSION: [7.4, 8.0, 8.1]
        VARIANT: [fpm, fpm-alpine]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - mkdir -p .docker
    - "docker load -q -i .docker/fs.tar 2>&1 || :"
    - rm -rf .docker
  script:
    - docker pull "${CI_REGISTRY_IMAGE}:${PHP_VERSION}-${VARIANT}" || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:${PHP_VERSION}-${VARIANT} -t "${CI_REGISTRY_IMAGE}:${PHP_VERSION}-${VARIANT}" -f Dockerfile --build-arg PHP_VERSION=${CI_REGISTRY_IMAGE}:${PHP_VERSION}-${VARIANT} .
    - docker push "${CI_REGISTRY_IMAGE}:${CI_REGISTRY_IMAGE}:${PHP_VERSION}-${VARIANT}"
  after_script:
    - mkdir -p .docker
    - "docker save -o .docker/fs.tar ${CI_REGISTRY_IMAGE}:${CI_REGISTRY_IMAGE}:${PHP_VERSION}-${VARIANT} 2>&1 || :"
    #why is this needed?
    # - docker system prune -a
  cache:
    - key: $CI_COMMIT_REF_SLUG
      paths:
        - .docker
  only:
    - main